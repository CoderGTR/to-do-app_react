{"version":3,"sources":["components/app-header/app-header.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/search-panel/search-panel.js","components/item-status-filter/item-status-filter.js","components/item-add-form/item-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","ToDoListItem","this","props","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","Component","TodoList","todos","onDelete","elements","map","item","id","itemProps","SearchPanel","state","term","searchChange","e","target","value","setState","onSearchChange","type","placeholder","onChange","ItemStatusFilter","buttons","name","filter","onStatusChange","classes","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","toDoData","createTodoItem","status","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","items","val","length","toLowerCase","indexOf","arr","propName","oldItem","visibleItems","search","doneCount","toDoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0cdacef.chunk.js","sourcesContent":["import React from \"react\";\nimport './app-header.css'\n\nconst AppHeader = ({toDo, done}) => {\n    return (\n        <div className=\"app-header d-flex\">\n            <h1>Todo List</h1>\n            <h2>{toDo} more to do, {done} done</h2>\n        </div>\n    )\n};\n\nexport default AppHeader","import React, {Component} from 'react'\nimport './todo-list-item.css'\n\n\nexport default class ToDoListItem extends Component {\n\n\n\n\n    render() {\n        const {label,\n            onDeleted,\n            onToggleImportant,\n            onToggleDone,\n            important,\n            done\n        } = this.props;\n\n\n        let classNames = 'todo-list-item'\n        if (done) {\n            classNames += ' done';\n        }\n        if (important) {\n            classNames += ' important '\n        }\n\n\n\n        return (\n            <span className={classNames}>\n            <span className=\"todo-list-item-label\"\n                  onClick={onToggleDone}\n            >\n                {label}\n            </span>\n\n            <button\n                className=\"btn btn-outline-success btn-sm float-right\"\n                onClick={onToggleImportant}\n            >\n                <i className='fa fa-exclamation' /></button>\n            <button\n                className=\"btn btn-outline-danger btn-sm float-right\"\n                onClick={onDeleted}\n                >\n                <i className='fa fa-trash-o' /></button>\n        </span>\n        )\n    }\n}\n\n\n","import React from 'react';\n\nimport TodoListItem from '../todo-list-item/todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({ todos ,\n                      onDelete,\n                      onToggleImportant,\n                      onToggleDone}) => {\n\n    const elements = todos.map((item) => {\n        const { id, ...itemProps } = item;\n\n        return (\n            <li key={id} className=\"list-group-item\">\n                <TodoListItem\n                    {...itemProps }\n                    onDeleted = {()=>onDelete(id)}\n                    onToggleImportant = {() => onToggleImportant(id)}\n                    onToggleDone = {() => onToggleDone(id)}\n                    />\n            </li>\n        );\n    });\n\n    return (\n        <ul className=\"list-group todo-list\">\n            { elements }\n        </ul>\n    );\n};\n\nexport default TodoList;","import React, {Component} from 'react';\n\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component{\n\n    state = {\n        term : ''\n    }\n\n    searchChange = (e) => {\n        const term = e.target.value\n        this.setState({ term })\n        this.props.onSearchChange(term)\n    }\n\n    render() {\n        // const {searchHandler} = this.props;\n        return (\n            <input type=\"text\"\n                   className=\"form-control search-input\"\n                   placeholder=\"type to search\"\n                   value={this.state.term}\n                   onChange={this.searchChange}\n            />\n        );\n    }\n\n\n};\n","import React, {Component} from 'react'\nimport './item-status-filter.css'\n\nexport default class ItemStatusFilter extends Component{\n\n\n    buttons = [\n        {name : 'all', label : 'All'},\n        {name : 'active', label : 'Active'},\n        {name : 'done', label : 'Done'}\n    ]\n\n\n\n\n\n\n    render() {\n\n        const {filter, onStatusChange} = this.props;\n        const buttons = this.buttons.map(({name, label})=> {\n            const isActive = filter === name;\n            const classes = isActive ? 'btn-info' : 'btn-outline-secondary'\n            return (\n            <button\n                type=\"button\"\n                className={`btn ${classes}`}\n                key={name}\n                onClick={() => onStatusChange(name)}>\n                {label}\n            </button>\n            )\n        })\n\n        return (\n            <div className=\"btn-group\">\n                {buttons}\n            </div>\n        )\n    }\n}\n\n\n\n","import React, {Component} from 'react';\nimport './item-add-form.css'\n\nexport default class ItemAddForm extends Component{\n\n    state = {\n        label : ''\n    }\n\n    onLabelChange = (e) => {\n        this.setState({\n            label : e.target.value\n        })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        this.props.onItemAdded(this.state.label)\n        this.setState({\n            label : ''\n        })\n    }\n\n    render() {\n        const {onItemAdded} = this.props;\n        return (\n            <form\n                className='item-add-form d-flex'\n                onSubmit={this.onSubmit}\n                >\n                <input type=\"text\"\n                       className=\"form-control input-form\"\n                       onChange={this.onLabelChange}\n                       placeholder=\"What needs to be done?\"\n                       value={this.state.label}\n                    />\n                <button\n                    className='btn btn-outline-secondary btn-sm'\n                    >Add Item\n                </button>\n            </form>\n        )\n    }\n}","import React, {Component} from 'react';\nimport AppHeader from \"../app-header/app-header\";\nimport TodoList from \"../todo-list/todo-list\";\nimport SearchPanel from \"../search-panel/search-panel\";\nimport ItemStatusFilter from \"../item-status-filter/item-status-filter\";\nimport ItemAddForm from \"../item-add-form/item-add-form\";\nimport './app.css'\n\n\n\n\n\nexport default class App extends Component {\n\n    maxId = 100;\n\n    state = {\n        toDoData : [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Make Awesome App'),\n            this.createTodoItem('Have a lunch')\n        ],\n        term : '',\n        status : 'all'\n    };\n\n    createTodoItem (label) {\n        return {\n            label ,\n            important : false,\n            done: false,\n            id : this.maxId++\n        }\n    }\n\n    deleteItem = (id) => {\n        this.setState(({ toDoData })=> {\n            const idx = toDoData.findIndex((el) => el.id === id);\n\n\n            const newArray = [...toDoData.slice(0, idx), ...toDoData.slice(idx + 1)];\n            return {\n                toDoData: newArray\n            }\n        })\n    }\n\n    addItem = (text) => {\n        const newItem = this.createTodoItem(text)\n\n        this.setState(({ toDoData }) => {\n\n            const newArr = [\n                ...toDoData,\n                newItem\n            ]\n\n            return {\n                toDoData : newArr\n            }\n        })\n    }\n\n    search(items, term) {\n        if(term.length === 0){\n            return items;\n        }\n\n        return items.filter((item)=> {\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1\n        })\n    }\n\n    toggleProperty(arr, id, propName) {\n        const idx = arr.findIndex((el) => el.id === id);\n\n        const oldItem = arr[idx];\n        const newItem = {...oldItem, [propName] : !oldItem[propName]};\n\n        return [\n            ...arr.slice(0, idx),\n            newItem,\n            ...arr.slice(idx + 1)\n        ]\n    }\n\n    onToggleImportant = (id) => {\n        this.setState(({toDoData})=> {\n            return {\n                toDoData : this.toggleProperty(toDoData, id, 'important')\n            };\n        })\n    }\n\n    onToggleDone = (id) => {\n        this.setState(({toDoData}) => {\n\n            return {\n                toDoData : this.toggleProperty(toDoData, id, 'done')\n            };\n        })\n    }\n\n    onSearchChange = (term) => {\n        this.setState({term})\n    }\n\n    filter = (items, status) => {\n\n\n\n        switch (status) {\n            case 'all' :\n                return items\n            case 'active' :\n                return  items.filter((item)=> item.done !== true);\n            case  'done' :\n               return  items.filter((item)=> item.done === true)\n            default :\n               return items\n        }\n    }\n\n    onStatusChange = (val) => {\n        this.setState({\n            status : val\n        })\n    }\n\n    render() {\n\n        const {toDoData, term, status} = this.state;\n\n        // const activeItems = this.onActiveHandler\n\n        const visibleItems = this.filter(this.search(toDoData, term), status)\n        const doneCount = toDoData.filter(el => el.done === true).length;\n        const toDoCount = toDoData.length - doneCount;\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={toDoCount} done={doneCount}/>\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel\n                        onSearchChange = {this.onSearchChange}\n                        />\n                    <ItemStatusFilter\n                        filter = {status}\n                    onStatusChange = {this.onStatusChange}\n                    />\n                </div>\n                <TodoList\n                    todos = {visibleItems}\n                    onDelete = {this.deleteItem}\n                    onToggleImportant = {this.onToggleImportant}\n                    onToggleDone = {this.onToggleDone}\n                />\n                <ItemAddForm\n                onItemAdded = {this.addItem}\n                />\n            </div>\n        )\n    }\n\n\n}\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from \"./components/app/app\";\n\n\n\nReactDOM.render(<App />,\n    document.getElementById('root'));"],"sourceRoot":""}